#!/bin/ksh
####################################################################         
# 
#   backuptab : BCVÏóêÏÑú TableÏùÑ ASCii BackupÌïòÎäî ShellÏûÖÎãàÎã§
#
#   ÏûëÏÑ±Ïûê : Î∞îÎãà                 ÏûëÏÑ±ÏùºÏûê : 2003ÎÖÑ 06Ïõî 23Ïùº
#                                 ÏµúÏ¢ÖÏàòÏ†ï : 2009ÎÖÑ 06Ïõî 10Ïùº
#                                 ÌëúÏ§ÄÎ≤ÑÏ†Ñ : v0.2
#
#   ÏÇ¨Ïö©Î≤ï : backuptab (ÌòÑÏû¨ÏùºÏûê Ïù¥Ï†Ñ Î™áÏùº)
#   ÏöîÌååÏùº : [m01/m02]:/informix/SCHEMA/tables_[d/m]_bak_[1/p]_[Î≥¥Í¥ÄÍ∏∞Í∞Ñ]
#   Í≤∞Í≥ºÎ¨º : tables_x.yyyymmdd (optional)
#   Ï£º  Ïùò : Text ColumnÏù¥ Ìè¨Ìï®Îêú TableÏùÄ BackupÏù¥ ÏïàÎê† ÏàòÎèÑ ÏûàÏùå
#
####################################################################

# Tool Ìè¥Îçî ÏÑ§Ï†ï ########################################################
if [ ! "$TOOL" ]
then export TOOL=$HOME/tool
fi
#########################################################################


# OSÎ≥Ñ awk ÏÑ§Ï†ï #########################################################
if [ `uname` = 'HP-UX' ]
then
   export CAWK=awk
else
   export CAWK=nawk
fi
#########################################################################


# ÏûÑÏãúÌååÏùº Ï¥àÍ∏∞Ìôî #######################################################
export TempTail=`tty | $CAWK -F/ '{print $4}'`
export TempFile1=$TOOL/tmp/`echo $0 | $CAWK -F '/' '{ print $NF }'`.tmp_${TempTail}
export TempFile2=$TOOL/tmp/`echo $0 | $CAWK -F '/' '{ print $NF }'`.tmp2_${TempTail}
export TempFile3=$TOOL/tmp/`echo $0 | $CAWK -F '/' '{ print $NF }'`.tmp3_${TempTail}
export TempFile4=$TOOL/tmp/`echo $0 | $CAWK -F '/' '{ print $NF }'`.tmp4_${TempTail}

if [ -f $TempFile1 ]; then rm $TempFile1; fi
if [ -f $TempFile2 ]; then rm $TempFile2; fi
if [ -f $TempFile3 ]; then rm $TempFile3; fi
if [ -f $TempFile4 ]; then rm $TempFile4; fi
#########################################################################


# DBÎ™Ö ÏÑ§Ï†ï #############################################################
if [ ! "$2" ]
then
	if [ ! "$DBNAME" ]
	then export dbname="dbname"
	else export dbname=$DBNAME
	fi
else export dbname=$2
fi
#########################################################################

echo '[0m\c'
################### Default #############################################


if [ ! "$1" ]
then export minus=0
else export minus=$1
fi

while true
do ##### Main While Loop

cd /backlog/informix

###########################################
#   Ï†ïÎ≥¥Í≥Ñ
###########################################

if [ $INFORMIXSERVER = 'mst02_tcp' ] || [ $INFORMIXSERVER = 'tst2_tcp' ]
then 

	export server='m02'
	export dbserver='mst02_tcp'

	echo
	echo '-------------------------------------------'
	echo '     Î∞±ÏóÖÌï† ÌÖåÏù¥Î∏îÏùò Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî'
	echo '-------------------------------------------'
	echo '     1) Ïùº Ï£ºÍ∏∞ ÌÖåÏù¥Î∏î'
	echo '     2) Ïõî Ï£ºÍ∏∞ ÌÖåÏù¥Î∏î'
	echo '     0) Îπ†Ï†∏ ÎÇòÍ∞ÄÍ∏∞'
	echo '-------------------------------------------'
	echo '     > \c'
	read yn
	echo

	if [ $yn -eq 1 ]; then 
	
		echo
		echo '-------------------------------------------'
		echo '     Î∞±ÏóÖÌï† ÌÖåÏù¥Î∏îÏùò Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî'
		echo '-------------------------------------------'
		echo '     1) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥   7Ïùº) ÌÖåÏù¥Î∏î'
		echo '     2) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥  31Ïùº) ÌÖåÏù¥Î∏î'
		echo '     3) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥  62Ïùº) ÌÖåÏù¥Î∏î'
		echo '     4) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥ 184Ïùº) ÌÖåÏù¥Î∏î'
		echo '-------------------------------------------'
		echo '     > \c'
		read yn
		echo
	
		if [ $yn -eq 1 ]; then 
			export term='d'
			export save='p'
			export day='7'
			cd $server/day/$save
		elif [ $yn -eq 2 ]; then
			export term='d'
			export save='p'
			export day='31'
			cd $server/day/$save
		elif [ $yn -eq 3 ]; then
			export term='d'
			export save='p'
			export day='62'
			cd $server/day/$save
		elif [ $yn -eq 4 ]; then
			export term='d'
			export save='p'
			export day='184'
			cd $server/day/$save
		else
			echo 'ÏûÖÎ†• Ïò§Î•ò ÏûÖÎãàÎã§'
			exit
		fi

dbaccess $DBNAME <<! 1> /dev/null 2> /dev/null
set isolation to dirty read;
unload to $TempFile1 delimiter ' '
select first 1 to_char( today - $minus -1 - $day, "%Y%m%d" ) tabdate from dual;
!

		echo '1,$s/ //g\nw\nq' | ed $TempFile1 > /dev/null
		export theday=`cat $TempFile1`
		if [ -f $TempFile1 ]; then rm $TempFile1; fi

dbaccess $DBNAME <<! 1> /dev/null 2> /dev/null
set isolation to dirty read;
unload to $TempFile1 delimiter ' '
select to_char( today - $minus -1 -$day, "%Y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -2 -$day, "%Y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -3 -$day, "%Y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -4 -$day, "%Y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -5 -$day, "%Y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -6 -$day, "%Y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -7 -$day, "%Y%m%d" ) tabdate from dual;
!

		export tables=`echo 'tables_'$term'_bak_'$save'_'$day`
		rcp `echo ${server}':/informix/SCHEMA/tables_'$term'_bak_'$save'_'$day` .
	
		echo
		echo '-------------------------------------------'
		for i in `cat $tables`
		do
			echo $i$theday
		done
		echo '-------------------------------------------'
		cat $TempFile1
		echo '-------------------------------------------'
		echo 'Ïù¥ ÌÖåÏù¥Î∏îÎì§ÏùÑ backup ÌïòÎ©¥ ÎêòÍ≤†ÏäµÎãàÍπå? \c'
		read yn
		if [ $yn = 'y' ]
		then
	
			for i in `cat $tables`
			do
				if [ -f $TempFile2 ]; then rm $TempFile2; fi
	
				if [ -d $i ]
				then echo 'Í∏∞Ï°¥Ïùò '$i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.'
				else mkdir $i; echo $i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÎßåÎì≠ÎãàÎã§.'
				fi
	
				if [ -d $i/$i$theday ]
				then echo 'Í∏∞Ï°¥Ïùò '$i$theday' ÎîîÎ†âÌÜ†Î¶¨Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.'
				else mkdir $i/$i$theday; echo $i$theday' ÎîîÎ†âÌÜ†Î¶¨Î•º ÎßåÎì≠ÎãàÎã§.'
				fi
	
				for j in `cat $TempFile1`
				do
					echo $i$j >> $TempFile2
				done 
	
				count $TempFile2 | grep -v '^$' | grep -v 'ÏóÜÏùå' > ${i}_${theday}.cnt
				cd $i/$i$theday
				for k in `cat $TempFile2`
				do
					if [ -f $TempFile3 ]; then rm $TempFile3; fi
					if [ -f $TempFile4 ]; then rm $TempFile4; fi

# Ïπ¥ÎìúÎ≤àÌò∏ ÏÇ≠Ï†ú ÌïÑÏöî ÌÖåÏù¥Î∏î Check ÌõÑ Unload ÏãúÏûë

					export cardtable='none'
					export cardcolumn='none'
               rcp m02:/informix/SCHEMA/tables_d_card .
               for ct in `cat tables_d_card | $CAWK -F ' ' '{print $1}'`
					do
						if [ $i = $ct ]; then
							export cardtable=$i
							export cardcolumn1=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $2}'`
							export column1len=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $3}'`
							export cardcolumn2=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $4}'`
							export column2len=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $5}'`
							export cardcolumn3=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $6}'`
							export column3len=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $7}'`
						fi
					done

					if [ $cardtable = 'none' ]; then
# ÏùºÎ∞ò Table Unload ÏãúÏûë
						unload $k 1> /dev/null 2> $TempFile3
# ÏùºÎ∞ò Table Unload ÏôÑÎ£å
					else
						dbaccess $DBNAME <<! 1> /dev/null 2> /dev/null
							unload to $TempFile4
							select c.colno, c.colname
							  from syscolumns c, systables t
							 where t.tabname = '$k'
							   and t.tabid = c.tabid
							 order by 1;
!
						export sql='unload to '$k'.unl select '
						export NumberOfCol=`cat $TempFile4 | wc -l`
						for columns in `cat $TempFile4`
						do
							export colno=`echo $columns | $CAWK -F '|' '{print $1}'`
							export colname=`echo $columns | $CAWK -F '|' '{print $2}'`
							export sql=$sql$colname
							if [ $colname = $cardcolumn1 ]; then
								export sql=$sql'[1,8] || "xxxx" || '$colname'[13,'$column1len']'
							elif [ x$colname = x$cardcolumn2 ]; then
								export sql=$sql'[1,8] || "xxxx" || '$colname'[13,'$column2len']'
							elif [ x$colname = x$cardcolumn3 ]; then
								export sql=$sql'[1,8] || "xxxx" || '$colname'[13,'$column3len']'
							fi
							if [ $colno -lt $NumberOfCol ]; then 
								export sql=$sql','
							fi
						done
						export sql=$sql' from '$k
						echo 'Card No 3rd Range Deleted\c'
						dbaccess $DBNAME <<! 1> /dev/null 2> $TempFile3
							$sql
!
						if [ -f $TempFile4 ]; then rm $TempFile4; fi
						echo $k >> /backlog/informix/work/tables_x.m02_`date +"%Y%m%d"`
					fi

					rm tables_d_card

# Ïπ¥ÎìúÎ≤àÌò∏ ÏÇ≠Ï†ú ÌïÑÏöî ÌÖåÏù¥Î∏î Check ÌõÑ Unload ÏôÑÎ£å

					cat $TempFile3 | $CAWK -F ' ' '{
						{ if ( $3 == "unloaded." ) printf("%30s :%10d\n", "'$k'", $1); }
					}' > $TempFile4
					cat $TempFile4
					cat $TempFile4 >> ../../${i}_${theday}.bak
					rsh m02 /informix/tool/sossch $k > $k.sql
				done
				cd ../..
			done

			rm $tables
	
		else
	
			echo 'Ï∑®ÏÜå ÎêòÏóàÏäµÎãàÎã§.'
	
		fi

	elif [ $yn -eq 2 ]; then 

		echo
		echo '-------------------------------------------'
		echo '     Î∞±ÏóÖÌï† ÌÖåÏù¥Î∏îÏùò Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî'
		echo '-------------------------------------------'
		echo '     1) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥ 6Í∞úÏõî) ÌÖåÏù¥Î∏î'
		echo '     2) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥   1ÎÖÑ) ÌÖåÏù¥Î∏î'
		echo '     3) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥   2ÎÖÑ) ÌÖåÏù¥Î∏î'
		echo '     4) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥   2ÎÖÑ) ÎßàÏù¥Ïû•Î∂Ä'
		echo '     5) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥   3ÎÖÑ) ÌÖåÏù¥Î∏î'
		echo '     6) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥   5ÎÖÑ) ÌÖåÏù¥Î∏î'
		echo '-------------------------------------------'
		echo '     > \c'
		read yn
		echo
	
		if [ $yn -eq 1 ]; then 
			export term='m'
			export save='p'
			export month='6'
			cd $server/month/$save
		elif [ $yn -eq 2 ]; then
			export term='m'
			export save='p'
			export month='12'
			cd $server/month/$save
		elif [ $yn -eq 3 ]; then
			export term='m'
			export save='p'
			export month='24'
			cd $server/month/$save
		elif [ $yn -eq 4 ]; then
			export term='m'
			export save='p'
			export month='24'
			cd $server/month/$save
			export server='henry'
			export dbserver='henry_tcp'
		elif [ $yn -eq 5 ]; then
			export term='m'
			export save='p'
			export month='36'
			cd $server/month/$save
		elif [ $yn -eq 6 ]; then
			export term='m'
			export save='p'
			export month='60'
			cd $server/month/$save
		else
			echo 'ÏûÖÎ†• Ïò§Î•ò ÏûÖÎãàÎã§'
			exit
		fi

dbaccess $DBNAME <<! 1> /dev/null 2> /dev/null
set isolation to dirty read;
unload to $TempFile1 delimiter ' '
select first 1 to_char( today - interval(`expr $month + $minus + 1`) month to month, "%Y%m" ) tabdate from dual;
!

		echo '1,$s/ //g\nw\nq' | ed $TempFile1 > /dev/null
		export themonth=`cat $TempFile1`
		if [ -f $TempFile1 ]; then rm $TempFile1; fi

		export tables=`echo 'tables_'$term'_bak_'$save'_'$month`
		
		if [ $server = 'm02' ]
		then rcp `echo ${server}':/informix/SCHEMA/tables_'$term'_bak_'$save'_'$month` .
#######################################################################################
#     ÎßàÏù¥Ïû•Î∂Ä Ïù¥Í¥ÄÏù¥ ÎÅùÎÇòÎ©¥ ÏïÑÎûò ÎùºÏù∏ÏùÑ ÏàòÏ†ïÌïòÎùº.
		else rcp `echo 'm03:/informix/SCHEMA/M03/tables_'$term'_bak_'$save'_'$month` .
#######################################################################################
		fi
	
		echo
		echo '-------------------------------------------'
		for i in `cat $tables`
		do
			echo $i$themonth
		done
		echo '-------------------------------------------'
		echo $themonth
		echo '-------------------------------------------'
		echo 'Ïù¥ ÌÖåÏù¥Î∏îÎì§ÏùÑ backup ÌïòÎ©¥ ÎêòÍ≤†ÏäµÎãàÍπå? \c'
		read yn
		if [ $yn = 'y' ]
		then
	
			for i in `cat $tables`
			do
	
				if [ -d $i ]
				then echo 'Í∏∞Ï°¥Ïùò '$i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.'
				else mkdir $i; echo $i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÎßåÎì≠ÎãàÎã§.'
				fi
	
				count $i$themonth ${DBNAME}@${dbserver} | grep -v '^$' | grep -v 'ÏóÜÏùå' > ${i}_${themonth}.cnt
				cd $i

				if [ -f $TempFile3 ]; then rm $TempFile3; fi
				if [ -f $TempFile4 ]; then rm $TempFile4; fi
				unload $i$themonth ${DBNAME}@${dbserver} 1> /dev/null 2> $TempFile3
				cat $TempFile3 | $CAWK -F ' ' '{
					{ if ( $3 == "unloaded." ) printf("%30s :%10d\n", "'$i$themonth'", $1); }
				}' > $TempFile4
				cat $TempFile4
				cat $TempFile4 >> ../${i}_${themonth}.bak
				rsh $server /informix/tool/sossch $i$themonth > $i$themonth.sql

				cd ..
			done
	
		else
	
			echo 'Ï∑®ÏÜå ÎêòÏóàÏäµÎãàÎã§.'
	
		fi
		
		rm $tables

	elif [ $yn -eq 0 ]; then 

		echo
		echo 'Îπ†Ïù¥Îπ†Ïù¥'
		exit

	else

		echo
		echo 'ÏûòÎ™ª ÏûÖÎ†• ÌïòÏÖ®ÏäµÎãàÎã§.'
		exit

	fi
	

###########################################
#   ÏóÖÎ¨¥Í≥Ñ
###########################################

elif [ $INFORMIXSERVER = 'mst01_tcp' ] || [ $INFORMIXSERVER = 'tst_tcp' ]; then

	export server='m01'

	echo
	echo '-------------------------------------------'
	echo '     Î∞±ÏóÖÌï† ÌÖåÏù¥Î∏îÏùò Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî'
	echo '-------------------------------------------'
	echo '     1) Ïùº Ï£ºÍ∏∞ ÌÖåÏù¥Î∏î'
	echo '     2) Ïõî Ï£ºÍ∏∞ ÌÖåÏù¥Î∏î'
	echo '     0) Îπ†Ï†∏ ÎÇòÍ∞ÄÍ∏∞'
	echo '-------------------------------------------'
	echo '     > \c'
	read yn
	echo

	if [ $yn -eq 1 ]; then 
	
		echo
		echo '-------------------------------------------'
		echo '     Î∞±ÏóÖÌï† ÌÖåÏù¥Î∏îÏùò Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî'
		echo '-------------------------------------------'
		echo '     1) 1 ÎÖÑÎ≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥  31Ïùº) ÌÖåÏù¥Î∏î'
		echo '     2) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥  31Ïùº) ÌÖåÏù¥Î∏î'
		echo '     3) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥  92Ïùº) ÌÖåÏù¥Î∏î'
		echo '     4) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥ 366Ïùº) ÌÖåÏù¥Î∏î'
		echo '-------------------------------------------'
		echo '     > \c'
		read yn
		echo
	
		if [ $yn -eq 1 ]; then 
			export term='d'
			export save='1'
			export day='31'
			cd $server/day/$save
		elif [ $yn -eq 2 ]; then
			export term='d'
			export save='p'
			export day='31'
			cd $server/day/$save
		elif [ $yn -eq 3 ]; then
			export term='d'
			export save='p'
			export day='92'
			cd $server/day/$save
		elif [ $yn -eq 4 ]; then
			export term='d'
			export save='p'
			export day='366'
			cd $server/day/$save
		else
			echo 'ÏûÖÎ†• Ïò§Î•ò ÏûÖÎãàÎã§'
			exit
		fi

dbaccess $DBNAME <<! 1> /dev/null 2> /dev/null
set isolation to dirty read;
unload to $TempFile1 delimiter ' '
select first 1 to_char( today - $minus -1 - $day, "%Y%m%d" ) tabdate from dual;
!
echo '1,$s/ //g\nw\nq' | ed $TempFile1 > /dev/null
export theday=`cat $TempFile1`
if [ -f $TempFile1 ]; then rm $TempFile1; fi

dbaccess $DBNAME <<! 1> /dev/null 2> /dev/null
set isolation to dirty read;
unload to $TempFile1 delimiter ' '
select to_char( today - $minus -1 -$day, "%y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -2 -$day, "%y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -3 -$day, "%y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -4 -$day, "%y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -5 -$day, "%y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -6 -$day, "%y%m%d" ) tabdate from dual
union all
select to_char( today - $minus -7 -$day, "%y%m%d" ) tabdate from dual;
!
	
		export tables=`echo 'tables_'$term'_bak_'$save'_'$day`
		rcp `echo ${server}':/informix/SCHEMA/tables_'$term'_bak_'$save'_'$day` .
	
		echo
		echo '-------------------------------------------'
		for i in `cat $tables`
		do
			echo $i$theday
		done
		echo '-------------------------------------------'
		cat $TempFile1
		echo '-------------------------------------------'
		echo 'Ïù¥ ÌÖåÏù¥Î∏îÎì§ÏùÑ backup ÌïòÎ©¥ ÎêòÍ≤†ÏäµÎãàÍπå? \c'
		read yn
		if [ $yn = 'y' ]
		then
	
			for i in `cat $tables`
			do
				if [ -f $TempFile2 ]; then rm $TempFile2; fi
	
				if [ -d $i ]
				then echo 'Í∏∞Ï°¥Ïùò '$i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.'
				else mkdir $i; echo $i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÎßåÎì≠ÎãàÎã§.'
				fi
	
				if [ -d $i/$i$theday ]
				then echo 'Í∏∞Ï°¥Ïùò '$i$theday' ÎîîÎ†âÌÜ†Î¶¨Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.'
				else mkdir $i/$i$theday; echo $i$theday' ÎîîÎ†âÌÜ†Î¶¨Î•º ÎßåÎì≠ÎãàÎã§.'
				fi
	
				for j in `cat $TempFile1`
				do
					echo $i$j >> $TempFile2
				done 
	
				count $TempFile2 | grep -v '^$' | grep -v 'ÏóÜÏùå' > ${i}_${theday}.cnt
				cd $i/$i$theday
				for k in `cat $TempFile2`
				do
					if [ -f $TempFile3 ]; then rm $TempFile3; fi
					if [ -f $TempFile4 ]; then rm $TempFile4; fi

# Ïπ¥ÎìúÎ≤àÌò∏ ÏÇ≠Ï†ú ÌïÑÏöî ÌÖåÏù¥Î∏î Check ÌõÑ Unload ÏãúÏûë

					export cardtable='none'
					export cardcolumn='none'
               rcp m01:/informix/SCHEMA/tables_d_card .
               for ct in `cat tables_d_card | $CAWK -F ' ' '{print $1}'`
					do
						if [ $i = $ct ]; then
							export cardtable=$i
							export cardcolumn1=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $2}'`
							export column1len=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $3}'`
							export cardcolumn2=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $4}'`
							export column2len=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $5}'`
							export cardcolumn3=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $6}'`
							export column3len=`grep ^$ct tables_d_card | $CAWK -F ' ' '{print $7}'`
						fi
					done

					if [ $cardtable = 'none' ]; then
# ÏùºÎ∞ò Table Unload ÏãúÏûë
						unload $k 1> /dev/null 2> $TempFile3
# ÏùºÎ∞ò Table Unload ÏôÑÎ£å
					else
						dbaccess $DBNAME <<! 1> /dev/null 2> /dev/null
							unload to $TempFile4
							select c.colno, c.colname
							  from syscolumns c, systables t
							 where t.tabname = '$k'
							   and t.tabid = c.tabid
							 order by 1;
!
						export sql='unload to '$k'.unl select '
						export NumberOfCol=`cat $TempFile4 | wc -l`
						for columns in `cat $TempFile4`
						do
							export colno=`echo $columns | $CAWK -F '|' '{print $1}'`
							export colname=`echo $columns | $CAWK -F '|' '{print $2}'`
							export sql=$sql$colname
							if [ $colname = $cardcolumn1 ]; then
								export sql=$sql'[1,8] || "xxxx" || '$colname'[13,'$column1len']'
							elif [ x$colname = x$cardcolumn2 ]; then
								export sql=$sql'[1,8] || "xxxx" || '$colname'[13,'$column2len']'
							elif [ x$colname = x$cardcolumn3 ]; then
								export sql=$sql'[1,8] || "xxxx" || '$colname'[13,'$column3len']'
							fi
							if [ $colno -lt $NumberOfCol ]; then 
								export sql=$sql','
							fi
						done
						export sql=$sql' from '$k
						echo 'Card No 3rd Range Deleted\c'
						dbaccess $DBNAME <<! 1> /dev/null 2> $TempFile3
							$sql
!
						if [ -f $TempFile4 ]; then rm $TempFile4; fi
						echo $k >> /backlog/informix/work/tables_x.`date +"%Y%m%d"`
					fi

					rm tables_d_card

# Ïπ¥ÎìúÎ≤àÌò∏ ÏÇ≠Ï†ú ÌïÑÏöî ÌÖåÏù¥Î∏î Check ÌõÑ Unload ÏôÑÎ£å

					cat $TempFile3 | $CAWK -F ' ' '{
						{ if ( $3 == "unloaded." ) printf("%30s :%10d\n", "'$k'", $1); }
					}' > $TempFile4
					cat $TempFile4
					cat $TempFile4 >> ../../${i}_${theday}.bak
					rsh m01 /informix/tool/sossch $k > $k.sql
				done
				cd ../..
			done

			rm $tables
	
		else
	
			echo 'Ï∑®ÏÜå ÎêòÏóàÏäµÎãàÎã§.'
	
		fi

	elif [ $yn -eq 2 ]; then 

		echo
		echo '-------------------------------------------'
		echo '     Î∞±ÏóÖÌï† ÌÖåÏù¥Î∏îÏùò Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî'
		echo '-------------------------------------------'
		echo '     1) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥ 2Í∞úÏõî) ÌÖåÏù¥Î∏î (ÌòÑÏû¨ÏóÜÏùå)'
		echo '     2) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥ 3Í∞úÏõî) ÌÖåÏù¥Î∏î'
		echo '     3) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥ 6Í∞úÏõî) ÌÖåÏù¥Î∏î'
		echo '     4) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥ 1ÎÖÑ) ÌÖåÏù¥Î∏î'
		echo '-------------------------------------------'
		echo '     > \c'
		read yn
		echo
	
		if [ $yn -eq 1 ]; then 
			export term='m'
			export save='p'
			export month='2'
			cd $server/month/$save
		elif [ $yn -eq 2 ]; then 
			export term='m'
			export save='p'
			export month='3'
			cd $server/month/$save
		elif [ $yn -eq 3 ]; then
			export term='m'
			export save='p'
			export month='6'
			cd $server/month/$save
		elif [ $yn -eq 4 ]; then
			export term='m'
			export save='p'
			export month='12'
			cd $server/month/$save
		else
			echo 'ÏûÖÎ†• Ïò§Î•ò ÏûÖÎãàÎã§'
			exit
		fi

dbaccess $DBNAME <<! 1> /dev/null 2> /dev/null
set isolation to dirty read;
unload to $TempFile1 delimiter ' '
select first 1 to_char( today - interval(`expr $month + $minus + 1`) month to month, "%y%m" ) tabdate from dual;
!

		echo '1,$s/ //g\nw\nq' | ed $TempFile1 > /dev/null
		export themonth=`cat $TempFile1`
		if [ -f $TempFile1 ]; then rm $TempFile1; fi

		export tables=`echo 'tables_'$term'_bak_'$save'_'$month`
		rcp `echo ${server}':/informix/SCHEMA/tables_'$term'_bak_'$save'_'$month` .
	
		echo
		echo '-------------------------------------------'
		for i in `cat $tables`
		do
			echo $i$themonth
		done
		echo '-------------------------------------------'
		echo $themonth
		echo '-------------------------------------------'
		echo 'Ïù¥ ÌÖåÏù¥Î∏îÎì§ÏùÑ backup ÌïòÎ©¥ ÎêòÍ≤†ÏäµÎãàÍπå? \c'
		read yn
		if [ $yn = 'y' ]
		then
	
			for i in `cat $tables`
			do
	
				if [ -d $i ]
				then echo 'Í∏∞Ï°¥Ïùò '$i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.'
				else mkdir $i; echo $i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÎßåÎì≠ÎãàÎã§.'
				fi
	
				count $i$themonth | grep -v '^$' | grep -v 'ÏóÜÏùå' > ${i}_${themonth}.cnt
				cd $i

				if [ -f $TempFile3 ]; then rm $TempFile3; fi
				if [ -f $TempFile4 ]; then rm $TempFile4; fi
				unload $i$themonth 1> /dev/null 2> $TempFile3
				cat $TempFile3 | $CAWK -F ' ' '{
					{ if ( $3 == "unloaded." ) printf("%30s :%10d\n", "'$i$themonth'", $1); }
				}' > $TempFile4
				cat $TempFile4
				cat $TempFile4 >> ../${i}_${themonth}.bak
				rsh m01 /informix/tool/sossch $i$themonth > $i$themonth.sql

				cd ..
			done

			rm $tables
	
		else
	
			echo 'Ï∑®ÏÜå ÎêòÏóàÏäµÎãàÎã§.'
	
		fi

	elif [ $yn -eq 0 ]; then 

		echo
		echo 'Îπ†Ïù¥Îπ†Ïù¥'
		exit

	else

		echo
		echo 'ÏûòÎ™ª ÏûÖÎ†• ÌïòÏÖ®ÏäµÎãàÎã§.'
		exit

	fi

###########################################
#   Ïã† ÎßàÏù¥Ïû•Î∂Ä
###########################################

elif [ $INFORMIXSERVER = 'henry_tcp' ]; then

	export server='henry'

	echo
	echo '-------------------------------------------'
	echo '     Î∞±ÏóÖÌï† ÌÖåÏù¥Î∏îÏùò Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî'
	echo '-------------------------------------------'
	echo '     2) Ïõî Ï£ºÍ∏∞ ÌÖåÏù¥Î∏î'
	echo '     0) Îπ†Ï†∏ ÎÇòÍ∞ÄÍ∏∞'
	echo '-------------------------------------------'
	echo '     > \c'
	read yn
	echo

	if [ $yn -eq 2 ]; then 

		echo
		echo '-------------------------------------------'
		echo '     Î∞±ÏóÖÌï† ÌÖåÏù¥Î∏îÏùò Ïú†ÌòïÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî'
		echo '-------------------------------------------'
		echo '     1) ÏòÅÍµ¨Î≥¥Í¥Ä (ÏÑúÎ≤ÑÎ≥¥Ï°¥ 1ÎÖÑ) ÌÖåÏù¥Î∏î'
		echo '-------------------------------------------'
		echo '     > \c'
		read yn
		echo
	
		if [ $yn -eq 1 ]; then 
			export term='m'
			export save='p'
			export month='12'
			cd $server/month/$save
		else
			echo 'ÏûÖÎ†• Ïò§Î•ò ÏûÖÎãàÎã§'
			exit
		fi

		dbaccess $DBNAME <<! 1> /dev/null 2> /dev/null
			set isolation to dirty read;
			unload to $TempFile1 delimiter ' '
			select first 1 to_char( today - interval(`expr $month + $minus + 1`) month to month, "%y%m" ) tabdate from dual;
!

		echo '1,$s/ //g\nw\nq' | ed $TempFile1 > /dev/null
		export themonth=`cat $TempFile1`
		if [ -f $TempFile1 ]; then rm $TempFile1; fi

		export tables=`echo 'tables_'$term'_bak_'$save'_'$month`
		rcp `echo ${server}':/informix/SCHEMA/tables_'$term'_bak_'$save'_'$month` .
	
		echo
		echo '-------------------------------------------'
		for i in `cat $tables`
		do
			echo $i$themonth
		done
		echo '-------------------------------------------'
		echo $themonth
		echo '-------------------------------------------'
		echo 'Ïù¥ ÌÖåÏù¥Î∏îÎì§ÏùÑ backup ÌïòÎ©¥ ÎêòÍ≤†ÏäµÎãàÍπå? \c'
		read yn
		if [ $yn = 'y' ]
		then
	
			for i in `cat $tables`
			do
	
				if [ -d $i ]
				then echo 'Í∏∞Ï°¥Ïùò '$i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÏÇ¨Ïö©Ìï©ÎãàÎã§.'
				else mkdir $i; echo $i' ÎîîÎ†âÌÜ†Î¶¨Î•º ÎßåÎì≠ÎãàÎã§.'
				fi
	
				count $i$themonth | grep -v '^$' | grep -v 'ÏóÜÏùå' > ${i}_${themonth}.cnt
				cd $i

				if [ -f $TempFile3 ]; then rm $TempFile3; fi
				if [ -f $TempFile4 ]; then rm $TempFile4; fi
				unload $i$themonth 1> /dev/null 2> $TempFile3
				cat $TempFile3 | $CAWK -F ' ' '{
					{ if ( $3 == "unloaded." ) printf("%30s :%10d\n", "'$i$themonth'", $1); }
				}' > $TempFile4
				cat $TempFile4
				cat $TempFile4 >> ../${i}_${themonth}.bak
				ds /informix/tool/sossch $i$themonth > $i$themonth.sql

				cd ..
			done

			rm $tables
	
		else
	
			echo 'Ï∑®ÏÜå ÎêòÏóàÏäµÎãàÎã§.'
	
		fi

	elif [ $yn -eq 0 ]; then 

		echo
		echo 'Îπ†Ïù¥Îπ†Ïù¥'
		exit

	else

		echo
		echo 'ÏûòÎ™ª ÏûÖÎ†• ÌïòÏÖ®ÏäµÎãàÎã§.'
		exit

	fi

else

	echo 'ÌôòÍ≤Ω ÏÑ§Ï†ïÏùÑ Îã§Ïãú ÌôïÏù∏ÌïòÏÑ∏Ïöî ^^'

fi

if [ -f $TempFile1 ]; then rm $TempFile1; fi
if [ -f $TempFile2 ]; then rm $TempFile2; fi
if [ -f $TempFile3 ]; then rm $TempFile3; fi
if [ -f $TempFile4 ]; then rm $TempFile4; fi

done ##### Main While Loop
